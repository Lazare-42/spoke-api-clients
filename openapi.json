{
  "openapi": "3.0.0",
  "info": {
    "title": "spoke_handler",
    "version": "0.2.0"
  },
  "paths": {
    "/calendar_events": {
      "get": {
        "tags": ["calendar events"],
        "description": "list all events of a calendar",
        "operationId": "calendar_calendar_events_list_events",
        "parameters": [
          {
            "name": "calendar_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/calendar_events/{uuid}": {
      "get": {
        "tags": ["calendar events"],
        "description": "get event with uuid",
        "operationId": "calendar_calendar_events_get_event",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/calendar_events/{uuid}/bot": {
      "post": {
        "tags": ["calendar events"],
        "operationId": "calendar_calendar_events_schedule_record_event",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": ["calendar events"],
        "operationId": "calendar_calendar_events_unschedule_record_event",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/calendars": {
      "get": {
        "tags": ["calendars"],
        "operationId": "calendar_calendars_list_calendars",
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": ["calendars"],
        "description": "synchronize all events of a new calendar",
        "operationId": "calendar_calendars_create_calendar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalendarParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/calendars/{uuid}": {
      "get": {
        "tags": ["calendars"],
        "operationId": "calendar_calendars_get_calendar",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": ["calendars"],
        "operationId": "calendar_calendars_delete_calendar",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": ["calendars"],
        "operationId": "calendar_calendars_update_calendar",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "required": [
          "account_id",
          "attendees",
          "calendar_id",
          "delete_token",
          "end_time",
          "google_id",
          "id",
          "is_organizer",
          "is_recurring",
          "meeting_url",
          "name",
          "record",
          "start_time",
          "status",
          "uuid"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "google_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "account_id": {
            "type": "integer",
            "format": "int32"
          },
          "meeting_url": {
            "type": "string"
          },
          "start_time": {
            "$ref": "#/components/schemas/SystemTime"
          },
          "calendar_id": {
            "type": "integer",
            "format": "int32"
          },
          "attendees": {},
          "record": {
            "type": "boolean"
          },
          "is_organizer": {
            "type": "boolean"
          },
          "end_time": {
            "$ref": "#/components/schemas/SystemTime"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "session_id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "refuse_recording_by": {
            "type": "string",
            "nullable": true
          },
          "delete_token": {
            "type": "string"
          },
          "recurring_event_id": {
            "type": "string",
            "nullable": true
          },
          "is_recurring": {
            "type": "boolean"
          },
          "agenda_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SystemTime": {
        "type": "object",
        "required": ["nanos_since_epoch", "secs_since_epoch"],
        "properties": {
          "secs_since_epoch": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "nanos_since_epoch": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          }
        }
      },
      "EventStatus": {
        "type": "string",
        "enum": ["PrepareRecording", "Recording", "Error", "None"]
      },
      "CreateCalendarParams": {
        "type": "object",
        "required": ["oauth_refresh_token", "platform"],
        "properties": {
          "oauth_client_id": {
            "type": "string",
            "nullable": true
          },
          "oauth_client_secret": {
            "type": "string",
            "nullable": true
          },
          "oauth_refresh_token": {
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/Provider"
          },
          "calendar_ids_to_sync": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Provider": {
        "description": "Fields with value `\"simple\"` parse as `Kind::Simple`. Fields with value `\"fancy\"` parse as `Kind::SoFancy`.",
        "type": "string",
        "enum": ["Google", "Microsoft"]
      }
    }
  }
}
