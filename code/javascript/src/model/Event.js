/**
 * spoke_handler
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventStatus from './EventStatus';
import SystemTime from './SystemTime';

/**
 * The Event model module.
 * @module model/Event
 * @version 0.2.0
 */
class Event {
    /**
     * Constructs a new <code>Event</code>.
     * @alias module:model/Event
     * @param id {Number} 
     * @param googleId {String} 
     * @param name {String} 
     * @param accountId {Number} 
     * @param meetingUrl {String} 
     * @param startTime {module:model/SystemTime} 
     * @param calendarId {Number} 
     * @param attendees {Object} 
     * @param record {Boolean} 
     * @param isOrganizer {Boolean} 
     * @param endTime {module:model/SystemTime} 
     * @param status {module:model/EventStatus} 
     * @param deleteToken {String} 
     * @param isRecurring {Boolean} 
     * @param uuid {String} 
     */
    constructor(id, googleId, name, accountId, meetingUrl, startTime, calendarId, attendees, record, isOrganizer, endTime, status, deleteToken, isRecurring, uuid) { 
        
        Event.initialize(this, id, googleId, name, accountId, meetingUrl, startTime, calendarId, attendees, record, isOrganizer, endTime, status, deleteToken, isRecurring, uuid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, googleId, name, accountId, meetingUrl, startTime, calendarId, attendees, record, isOrganizer, endTime, status, deleteToken, isRecurring, uuid) { 
        obj['id'] = id;
        obj['google_id'] = googleId;
        obj['name'] = name;
        obj['account_id'] = accountId;
        obj['meeting_url'] = meetingUrl;
        obj['start_time'] = startTime;
        obj['calendar_id'] = calendarId;
        obj['attendees'] = attendees;
        obj['record'] = record;
        obj['is_organizer'] = isOrganizer;
        obj['end_time'] = endTime;
        obj['status'] = status;
        obj['delete_token'] = deleteToken;
        obj['is_recurring'] = isRecurring;
        obj['uuid'] = uuid;
    }

    /**
     * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Event} obj Optional instance to populate.
     * @return {module:model/Event} The populated <code>Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('google_id')) {
                obj['google_id'] = ApiClient.convertToType(data['google_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'Number');
            }
            if (data.hasOwnProperty('meeting_url')) {
                obj['meeting_url'] = ApiClient.convertToType(data['meeting_url'], 'String');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = SystemTime.constructFromObject(data['start_time']);
            }
            if (data.hasOwnProperty('calendar_id')) {
                obj['calendar_id'] = ApiClient.convertToType(data['calendar_id'], 'Number');
            }
            if (data.hasOwnProperty('attendees')) {
                obj['attendees'] = ApiClient.convertToType(data['attendees'], Object);
            }
            if (data.hasOwnProperty('record')) {
                obj['record'] = ApiClient.convertToType(data['record'], 'Boolean');
            }
            if (data.hasOwnProperty('is_organizer')) {
                obj['is_organizer'] = ApiClient.convertToType(data['is_organizer'], 'Boolean');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = SystemTime.constructFromObject(data['end_time']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EventStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('session_id')) {
                obj['session_id'] = ApiClient.convertToType(data['session_id'], 'String');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'Number');
            }
            if (data.hasOwnProperty('refuse_recording_by')) {
                obj['refuse_recording_by'] = ApiClient.convertToType(data['refuse_recording_by'], 'String');
            }
            if (data.hasOwnProperty('delete_token')) {
                obj['delete_token'] = ApiClient.convertToType(data['delete_token'], 'String');
            }
            if (data.hasOwnProperty('recurring_event_id')) {
                obj['recurring_event_id'] = ApiClient.convertToType(data['recurring_event_id'], 'String');
            }
            if (data.hasOwnProperty('is_recurring')) {
                obj['is_recurring'] = ApiClient.convertToType(data['is_recurring'], 'Boolean');
            }
            if (data.hasOwnProperty('agenda_id')) {
                obj['agenda_id'] = ApiClient.convertToType(data['agenda_id'], 'Number');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Event</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Event</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Event.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['google_id'] && !(typeof data['google_id'] === 'string' || data['google_id'] instanceof String)) {
            throw new Error("Expected the field `google_id` to be a primitive type in the JSON string but got " + data['google_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['meeting_url'] && !(typeof data['meeting_url'] === 'string' || data['meeting_url'] instanceof String)) {
            throw new Error("Expected the field `meeting_url` to be a primitive type in the JSON string but got " + data['meeting_url']);
        }
        // validate the optional field `start_time`
        if (data['start_time']) { // data not null
          SystemTime.validateJSON(data['start_time']);
        }
        // validate the optional field `end_time`
        if (data['end_time']) { // data not null
          SystemTime.validateJSON(data['end_time']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['session_id'] && !(typeof data['session_id'] === 'string' || data['session_id'] instanceof String)) {
            throw new Error("Expected the field `session_id` to be a primitive type in the JSON string but got " + data['session_id']);
        }
        // ensure the json data is a string
        if (data['refuse_recording_by'] && !(typeof data['refuse_recording_by'] === 'string' || data['refuse_recording_by'] instanceof String)) {
            throw new Error("Expected the field `refuse_recording_by` to be a primitive type in the JSON string but got " + data['refuse_recording_by']);
        }
        // ensure the json data is a string
        if (data['delete_token'] && !(typeof data['delete_token'] === 'string' || data['delete_token'] instanceof String)) {
            throw new Error("Expected the field `delete_token` to be a primitive type in the JSON string but got " + data['delete_token']);
        }
        // ensure the json data is a string
        if (data['recurring_event_id'] && !(typeof data['recurring_event_id'] === 'string' || data['recurring_event_id'] instanceof String)) {
            throw new Error("Expected the field `recurring_event_id` to be a primitive type in the JSON string but got " + data['recurring_event_id']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}

Event.RequiredProperties = ["id", "google_id", "name", "account_id", "meeting_url", "start_time", "calendar_id", "attendees", "record", "is_organizer", "end_time", "status", "delete_token", "is_recurring", "uuid"];

/**
 * @member {Number} id
 */
Event.prototype['id'] = undefined;

/**
 * @member {String} google_id
 */
Event.prototype['google_id'] = undefined;

/**
 * @member {String} name
 */
Event.prototype['name'] = undefined;

/**
 * @member {Number} account_id
 */
Event.prototype['account_id'] = undefined;

/**
 * @member {String} meeting_url
 */
Event.prototype['meeting_url'] = undefined;

/**
 * @member {module:model/SystemTime} start_time
 */
Event.prototype['start_time'] = undefined;

/**
 * @member {Number} calendar_id
 */
Event.prototype['calendar_id'] = undefined;

/**
 * @member {Object} attendees
 */
Event.prototype['attendees'] = undefined;

/**
 * @member {Boolean} record
 */
Event.prototype['record'] = undefined;

/**
 * @member {Boolean} is_organizer
 */
Event.prototype['is_organizer'] = undefined;

/**
 * @member {module:model/SystemTime} end_time
 */
Event.prototype['end_time'] = undefined;

/**
 * @member {module:model/EventStatus} status
 */
Event.prototype['status'] = undefined;

/**
 * @member {String} error
 */
Event.prototype['error'] = undefined;

/**
 * @member {String} session_id
 */
Event.prototype['session_id'] = undefined;

/**
 * @member {Number} project_id
 */
Event.prototype['project_id'] = undefined;

/**
 * @member {String} refuse_recording_by
 */
Event.prototype['refuse_recording_by'] = undefined;

/**
 * @member {String} delete_token
 */
Event.prototype['delete_token'] = undefined;

/**
 * @member {String} recurring_event_id
 */
Event.prototype['recurring_event_id'] = undefined;

/**
 * @member {Boolean} is_recurring
 */
Event.prototype['is_recurring'] = undefined;

/**
 * @member {Number} agenda_id
 */
Event.prototype['agenda_id'] = undefined;

/**
 * @member {String} uuid
 */
Event.prototype['uuid'] = undefined;






export default Event;

