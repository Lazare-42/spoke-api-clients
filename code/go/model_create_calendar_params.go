/*
spoke_handler

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCalendarParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCalendarParams{}

// CreateCalendarParams struct for CreateCalendarParams
type CreateCalendarParams struct {
	OauthClientId NullableString `json:"oauth_client_id,omitempty"`
	OauthClientSecret NullableString `json:"oauth_client_secret,omitempty"`
	OauthRefreshToken string `json:"oauth_refresh_token"`
	Platform Provider `json:"platform"`
	CalendarIdsToSync []string `json:"calendar_ids_to_sync,omitempty"`
}

type _CreateCalendarParams CreateCalendarParams

// NewCreateCalendarParams instantiates a new CreateCalendarParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCalendarParams(oauthRefreshToken string, platform Provider) *CreateCalendarParams {
	this := CreateCalendarParams{}
	this.OauthRefreshToken = oauthRefreshToken
	this.Platform = platform
	return &this
}

// NewCreateCalendarParamsWithDefaults instantiates a new CreateCalendarParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCalendarParamsWithDefaults() *CreateCalendarParams {
	this := CreateCalendarParams{}
	return &this
}

// GetOauthClientId returns the OauthClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCalendarParams) GetOauthClientId() string {
	if o == nil || IsNil(o.OauthClientId.Get()) {
		var ret string
		return ret
	}
	return *o.OauthClientId.Get()
}

// GetOauthClientIdOk returns a tuple with the OauthClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCalendarParams) GetOauthClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OauthClientId.Get(), o.OauthClientId.IsSet()
}

// HasOauthClientId returns a boolean if a field has been set.
func (o *CreateCalendarParams) HasOauthClientId() bool {
	if o != nil && o.OauthClientId.IsSet() {
		return true
	}

	return false
}

// SetOauthClientId gets a reference to the given NullableString and assigns it to the OauthClientId field.
func (o *CreateCalendarParams) SetOauthClientId(v string) {
	o.OauthClientId.Set(&v)
}
// SetOauthClientIdNil sets the value for OauthClientId to be an explicit nil
func (o *CreateCalendarParams) SetOauthClientIdNil() {
	o.OauthClientId.Set(nil)
}

// UnsetOauthClientId ensures that no value is present for OauthClientId, not even an explicit nil
func (o *CreateCalendarParams) UnsetOauthClientId() {
	o.OauthClientId.Unset()
}

// GetOauthClientSecret returns the OauthClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCalendarParams) GetOauthClientSecret() string {
	if o == nil || IsNil(o.OauthClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.OauthClientSecret.Get()
}

// GetOauthClientSecretOk returns a tuple with the OauthClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCalendarParams) GetOauthClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OauthClientSecret.Get(), o.OauthClientSecret.IsSet()
}

// HasOauthClientSecret returns a boolean if a field has been set.
func (o *CreateCalendarParams) HasOauthClientSecret() bool {
	if o != nil && o.OauthClientSecret.IsSet() {
		return true
	}

	return false
}

// SetOauthClientSecret gets a reference to the given NullableString and assigns it to the OauthClientSecret field.
func (o *CreateCalendarParams) SetOauthClientSecret(v string) {
	o.OauthClientSecret.Set(&v)
}
// SetOauthClientSecretNil sets the value for OauthClientSecret to be an explicit nil
func (o *CreateCalendarParams) SetOauthClientSecretNil() {
	o.OauthClientSecret.Set(nil)
}

// UnsetOauthClientSecret ensures that no value is present for OauthClientSecret, not even an explicit nil
func (o *CreateCalendarParams) UnsetOauthClientSecret() {
	o.OauthClientSecret.Unset()
}

// GetOauthRefreshToken returns the OauthRefreshToken field value
func (o *CreateCalendarParams) GetOauthRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OauthRefreshToken
}

// GetOauthRefreshTokenOk returns a tuple with the OauthRefreshToken field value
// and a boolean to check if the value has been set.
func (o *CreateCalendarParams) GetOauthRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OauthRefreshToken, true
}

// SetOauthRefreshToken sets field value
func (o *CreateCalendarParams) SetOauthRefreshToken(v string) {
	o.OauthRefreshToken = v
}

// GetPlatform returns the Platform field value
func (o *CreateCalendarParams) GetPlatform() Provider {
	if o == nil {
		var ret Provider
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *CreateCalendarParams) GetPlatformOk() (*Provider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *CreateCalendarParams) SetPlatform(v Provider) {
	o.Platform = v
}

// GetCalendarIdsToSync returns the CalendarIdsToSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCalendarParams) GetCalendarIdsToSync() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CalendarIdsToSync
}

// GetCalendarIdsToSyncOk returns a tuple with the CalendarIdsToSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCalendarParams) GetCalendarIdsToSyncOk() ([]string, bool) {
	if o == nil || IsNil(o.CalendarIdsToSync) {
		return nil, false
	}
	return o.CalendarIdsToSync, true
}

// HasCalendarIdsToSync returns a boolean if a field has been set.
func (o *CreateCalendarParams) HasCalendarIdsToSync() bool {
	if o != nil && !IsNil(o.CalendarIdsToSync) {
		return true
	}

	return false
}

// SetCalendarIdsToSync gets a reference to the given []string and assigns it to the CalendarIdsToSync field.
func (o *CreateCalendarParams) SetCalendarIdsToSync(v []string) {
	o.CalendarIdsToSync = v
}

func (o CreateCalendarParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCalendarParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OauthClientId.IsSet() {
		toSerialize["oauth_client_id"] = o.OauthClientId.Get()
	}
	if o.OauthClientSecret.IsSet() {
		toSerialize["oauth_client_secret"] = o.OauthClientSecret.Get()
	}
	toSerialize["oauth_refresh_token"] = o.OauthRefreshToken
	toSerialize["platform"] = o.Platform
	if o.CalendarIdsToSync != nil {
		toSerialize["calendar_ids_to_sync"] = o.CalendarIdsToSync
	}
	return toSerialize, nil
}

func (o *CreateCalendarParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"oauth_refresh_token",
		"platform",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCalendarParams := _CreateCalendarParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCalendarParams)

	if err != nil {
		return err
	}

	*o = CreateCalendarParams(varCreateCalendarParams)

	return err
}

type NullableCreateCalendarParams struct {
	value *CreateCalendarParams
	isSet bool
}

func (v NullableCreateCalendarParams) Get() *CreateCalendarParams {
	return v.value
}

func (v *NullableCreateCalendarParams) Set(val *CreateCalendarParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCalendarParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCalendarParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCalendarParams(val *CreateCalendarParams) *NullableCreateCalendarParams {
	return &NullableCreateCalendarParams{value: val, isSet: true}
}

func (v NullableCreateCalendarParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCalendarParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


