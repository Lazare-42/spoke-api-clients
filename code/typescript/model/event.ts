/**
 * spoke_handler
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { EventStatus } from './eventStatus';
import { SystemTime } from './systemTime';

export class Event {
    'id': number;
    'googleId': string;
    'name': string;
    'accountId': number;
    'meetingUrl': string;
    'startTime': SystemTime;
    'calendarId': number;
    'attendees': any | null;
    'record': boolean;
    'isOrganizer': boolean;
    'endTime': SystemTime;
    'status': EventStatus;
    'error'?: string | null;
    'sessionId'?: string | null;
    'projectId'?: number | null;
    'refuseRecordingBy'?: string | null;
    'deleteToken': string;
    'recurringEventId'?: string | null;
    'isRecurring': boolean;
    'agendaId'?: number | null;
    'uuid': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "googleId",
            "baseName": "google_id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "accountId",
            "baseName": "account_id",
            "type": "number"
        },
        {
            "name": "meetingUrl",
            "baseName": "meeting_url",
            "type": "string"
        },
        {
            "name": "startTime",
            "baseName": "start_time",
            "type": "SystemTime"
        },
        {
            "name": "calendarId",
            "baseName": "calendar_id",
            "type": "number"
        },
        {
            "name": "attendees",
            "baseName": "attendees",
            "type": "any"
        },
        {
            "name": "record",
            "baseName": "record",
            "type": "boolean"
        },
        {
            "name": "isOrganizer",
            "baseName": "is_organizer",
            "type": "boolean"
        },
        {
            "name": "endTime",
            "baseName": "end_time",
            "type": "SystemTime"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "EventStatus"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        },
        {
            "name": "sessionId",
            "baseName": "session_id",
            "type": "string"
        },
        {
            "name": "projectId",
            "baseName": "project_id",
            "type": "number"
        },
        {
            "name": "refuseRecordingBy",
            "baseName": "refuse_recording_by",
            "type": "string"
        },
        {
            "name": "deleteToken",
            "baseName": "delete_token",
            "type": "string"
        },
        {
            "name": "recurringEventId",
            "baseName": "recurring_event_id",
            "type": "string"
        },
        {
            "name": "isRecurring",
            "baseName": "is_recurring",
            "type": "boolean"
        },
        {
            "name": "agendaId",
            "baseName": "agenda_id",
            "type": "number"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Event.attributeTypeMap;
    }
}

export namespace Event {
}
